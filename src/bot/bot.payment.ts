import { Injectable } from '@nestjs/common';
import { DatabaseService } from 'src/database/database.service';
import { DiscordService } from './bot.discord';
import { Context } from 'telegraf';
import { keyboard } from './keyboard/bot.keyboard';


@Injectable()
export class PaymentService {
   constructor(
      private readonly db: DatabaseService,
      private readonly discord: DiscordService
   ) {}


   async confirmPayment(ctx: Context, text: string, id: string, paymentId: string) {
      const discordId = await this.db.getDiscord(+id);
      try {
         if(text.includes('–ù–∞–≤—á–∞–Ω–Ω—è')) {
            await ctx.telegram.sendMessage(id, `–û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω–∞!\n–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –æ–ø–ª–∞—Ç–∏: <b>${paymentId}</b>\n<b>–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É!</b> –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –Ω–∞ –æ–¥–∏–Ω –º—ñ—Å—è—Ü—å –¥–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–æ–º'—é–Ω—ñ—Ç—ñ –ø—ñ—Å–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è, –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç—ñ –≤ —Ä–æ–∑–¥—ñ–ª <i>¬´–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å üë§¬ª</i> —ñ –æ–±—Ä–∞—Ç–∏ –æ–ø—Ü—ñ—é <i>¬´–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É üÜì¬ª</i>.`, { parse_mode: 'HTML' });
            return true;
         }
         if(!discordId) {
            await ctx.telegram.sendMessage(id, `–û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω–∞!\n–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –æ–ø–ª–∞—Ç–∏: <b>${paymentId}</b>\n<b>–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É!</b> –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–æ–º'—é–Ω—ñ—Ç—ñ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ Discord.`, { ...keyboard.auth, parse_mode: 'HTML' });
            return true;
         }
         const { status } = await this.discord.checkCommunityMember(discordId);
         if(!status) {
            const { inviteUrl } = await this.discord.getInviteUrl();
            await ctx.telegram.sendMessage(id, `–û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω–∞!\n–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –æ–ø–ª–∞—Ç–∏: <b>${paymentId}</b>\n–í–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–æ–º'—é–Ω—ñ—Ç—ñ - <i>${inviteUrl}</i>\n<b>–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É!</b> –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –¥–∞–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω—ñ–∫–æ–º—É, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–æ —î –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–µ.`, { parse_mode: 'HTML', disable_web_page_preview: true });
            return true;
         }
         await ctx.telegram.sendMessage(id, `–û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω–∞!\n–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –æ–ø–ª–∞—Ç–∏: <b>${paymentId}</b>`, { parse_mode: 'HTML' });
         return true;
      } catch(err) {
         console.error(err);
      }
      return false;
   }
}